<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
       default-lazy-init="true" default-autowire="byName">

    <!--dataSource 配置 start-->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${dataSource.driverClassName}"/>
        <property name="url" value="${dataSource.url}"/>
        <property name="username" value="${dataSource.username}"/>
        <property name="password" value="${dataSource.password}"/>
        <!--当这个池被启动时初始化的创建的连接个数-->
        <property name="initialSize" value="${dataSource.initialSize}"/>
        <!--可以在这个池中同时被分配的有效连接数的最大值，如设置为负数，则不限制-->
        <!--最大有效连接数-->
        <property name="maxTotal" value="${dataSource.maxTotal}"/>
        <!--可以在池中保持空闲的最大连接数，超出设置值之外的空闲连接将被回收，如设置为负数，则不限制 -->
        <!--最大连接数-->
        <property name="maxIdle" value="${dataSource.maxIdle}"/>
        <!--获得连接的最大等待毫秒数-->
        <property name="maxWaitMillis" value="${dataSource.maxWaitMillis}"/>
    </bean>
    <!--dataSource 配置 end-->

    <!--myBatis session 配置 start-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>
    <!--myBatis session 配置 end-->

    <bean id="userDao" class="shiyan.dao.user.impl.UserDaoImpl">
        <property name="clazz" value="shiyan.domain.user.User"/>
        <property name="sqlSession" ref="sqlSession"/>
    </bean>

    <!--事务配置-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:annotation-driven transaction-manager="txManager"/>
</beans>